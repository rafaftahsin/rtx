"use strict";(self.webpackChunkrtx=self.webpackChunkrtx||[]).push([[3926],{2083:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=t(5893),o=t(1151);const a={title:"pylon"},r=void 0,c={id:"3 Libraries and Frameworks/11 Robotics/pylon",title:"pylon",description:"Pylon CPP API Reference",source:"@site/1 tech/2 dev/3 Libraries and Frameworks/11 Robotics/pylon.md",sourceDirName:"3 Libraries and Frameworks/11 Robotics",slug:"/3 Libraries and Frameworks/11 Robotics/pylon",permalink:"/rtx/dev/3 Libraries and Frameworks/11 Robotics/pylon",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"pylon"},sidebar:"tutorialSidebar",previous:{title:"Robotics",permalink:"/rtx/dev/3 Libraries and Frameworks/11 Robotics/"},next:{title:"CLI Application",permalink:"/rtx/dev/3 Libraries and Frameworks/12 CLI Application/"}},s={},l=[{value:"Pylon CPP API Reference",id:"pylon-cpp-api-reference",level:3},{value:"Image Stitching Example",id:"image-stitching-example",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"pylon-cpp-api-reference",children:"Pylon CPP API Reference"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.baslerweb.com/pylonapi/cpp/class_pylon_1_1_access_exception",children:"https://docs.baslerweb.com/pylonapi/cpp/class_pylon_1_1_access_exception"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"image-stitching-example",children:"Image Stitching Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#include <iostream>\n#include <pylon/Pixel.h>\n#include <pylon/PylonIncludes.h>\n#include "StitchImage.h" \n// https://github.com/MattsProjects/StitchImage/blob/master/StitchImage.h\n\nint main(int argc, char * argv[]) {\n    Pylon::CPylonImage image1;\n    image1.Load("left_1.png");\n    std::cout << image1.GetHeight() << std::endl;\n    std::cout << image1.GetWidth() << std::endl;\n\n    Pylon::CPylonImage image2;\n    image2.Load("right_1.png");\n    std::cout << image2.GetHeight() << std::endl;\n    std::cout << image2.GetWidth() << std::endl;\n\n    Pylon::CPylonImage horizontalStitchedImage;\n\n    std::string errorMessage = "";\n\n    StitchImage::StitchToRight(horizontalStitchedImage, image1, &horizontalStitchedImage, errorMessage);\n    StitchImage::StitchToRight(horizontalStitchedImage, image2, &horizontalStitchedImage, errorMessage);\n\n    const Pylon::String_t image_name = "image_stitching/stitch.png";\n\n    horizontalStitchedImage.Save(Pylon::ImageFileFormat_Png, image_name);\n\n    return 0;\n}\n\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var i=t(7294);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);